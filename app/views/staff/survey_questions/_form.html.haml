-# frozen_string_literal: true
= simple_form_for @survey_question, url: staff_survey_question_path(@survey, @survey_question) do |f|
  = f.error_notification
  = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?

  .block.as-section
    .form-inputs
      = f.input :label
      = f.input :hint
      = f.input :response_view_name, label: "Response View Label", hint: "If you have any response views, if you add a question here it will override the question displayed on the response views."
      = f.input :required
      = f.input :question_type, as: :select, collection: SurveyQuestionType.select_options

      - if f.object.requires_answer_list?
        = f.input :answer_list, input_html: { value: f.object.answer_list.to_a.join(", ") }
        = f.input :answer_limit, label: "Limit Answers", hint: "Limit number of answers on multi-selects", collection: (1..100).to_a, allow_blank: true

      - if f.object.requires_character_limit?
        = f.input :character_limit

      - if f.object.requires_country_link?
        = f.input :country_question_id, as: :select, collection: @survey.survey_questions.by_type(SurveyQuestionType[:country_select]).map{ |question| [question.label, question.id] }

      - if f.object.fields.present?
        - f.object.fields.each do |field|
          = f.input field.to_sym, as: :string, input_html: { value: f.object.try(field) }

      - if f.object.survey.surveyable.linked_field_names.any?
        = f.input :linked_field_name, as: :select, collection: f.object.survey.surveyable.linked_field_names.map{ |field_name, field_options| [field_options[:label], field_name] }, include_blank: "None"

  = render "common/global_form_submit", f: f
